@using Koggo.Domain.Ext
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Koggo.Client.Models.Home.UserServicesModel
@{
    ViewData["Title"] = "Home Page";
}

@if (Model.TokenIsValid)
{
    <div id="container">
        <div id="cart-count" class="cart-count">0</div>
        <div id="filter-list">
            <h2>Filters</h2>
            <form method="get" asp-action="Index" asp-controller="UserServices">
                <!-- Price Range Filter -->
                <div class="filter-section">
                    <h3>Price Range</h3>
                    <label for="MinPrice">Min Price</label>
                    <input type="number" id="MinPrice" name="MinPrice">
                    <label for="MaxPrice">Max Price</label>
                    <input type="number" id="MaxPrice" name="MaxPrice">
                </div>

                <!-- Categories Filter -->
                <div class="filter-section">
                    <h3>Categories</h3>
                    <div class="styled-select">
                        <select for="Categories" id="Categories" name="Categories" multiple>
                            @foreach (var item in Model.ServiceTypes)
                            {
                                <option value="@item.ToGeo()">@item.ToGeo()</option>
                            }
                            <!-- Add more categories as needed -->
                        </select>
                    </div>
                    <button type="submit" asp-controller="UserServices" asp-action="Index" value="Search">Search</button>
                </div>
            </form>
        </div>

        <div id="content">
            @foreach (var userService in Model.UserServices)
            {
                <div class="service-item">
                    <div class="service-image">
                        <img src="data:image/png;base64,@userService.ThumbNailPhoto" alt="Service Image">
                    </div>
                    <div class="service-info">
                        <h2 class="service-name">Name: @userService.Service.Name</h2>
                        <p class="service-description">Description: @userService.Service.Description</p>
                        <p class="service-price">Price: $@userService.Price</p>
                        <button id="add-to-cart" class="cart-button see-more" data-service-id="@userService.Id" data-action="add">Add</button>
                        <button id="remove-from-cart" class="cart-button see-more" data-service-id="@userService.Id" data-action="remove">Remove</button>
                    </div>
                </div>
            }

            <div id="reservation-modal" class="modal">
                <div class="modal-content">
                    <span class="close-button" onclick="closeModal()">&times;</span>
                    <h2>Reserve a Service</h2>
                    <!-- Reservation Form -->
                    <form id="reservation-form">
                        <label for="provider-name">Provider Name: </label>
                        <input type="text" id="provider-name" name="provider-name" readonly value="test"><br>
                        <label for="provider-phone">Phone: </label>
                        <input type="text" id="provider-phone" name="provider-phone" readonly value="Provider Phone"><br>
                        <!--... other form fields ...-->
                        <input type="submit" value="Submit">
                    </form>
                </div>
            </div>

            <div id="pagination-controls">
                <button id="prev-page" disabled>Previous</button>
                <span id="page-num">1</span>
                <button id="next-page">Next</button>
            </div>
        </div>
    </div>
}
<script>
    var cartItems = [];
  
      document.addEventListener('DOMContentLoaded', function() {
          var buttons = document.querySelectorAll('.cart-button');
          var cartCountElement = document.getElementById('cart-count');
  
          function updateCartCount() {
              cartCountElement.textContent = cartItems.length;
          }
  
          buttons.forEach(function(button) {
              button.addEventListener('click', function() {
                  var serviceId = this.getAttribute('data-service-id');
                  var action = this.getAttribute('data-action');
                  var serviceItem = this.closest('.service-item');
  
                  if (action === 'add' && !cartItems.includes(serviceId)) {
                      cartItems.push(serviceId);
                      serviceItem.classList.add('added-to-cart');
                  } else if (action === 'remove') {
                      var index = cartItems.indexOf(serviceId);
                      if (index !== -1) {
                          cartItems.splice(index, 1);
                          serviceItem.classList.remove('added-to-cart');
                      }
                  }
  
                  updateCartCount();  // Update the cart count
              });
          });
  
          updateCartCount();  // Initial cart count update
      });
function closeModal() {
		document.getElementById('reservation-modal').style.display = "none";
	}

	window.onclick = function (event) {
		if (event.target == document.getElementById('reservation-modal')) {
			closeModal();
		}
	}
</script>